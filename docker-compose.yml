services:
  postgres:
      image: postgres:13
      environment:
        POSTGRES_DB: rshu_schedule  # Правильное имя базы
        POSTGRES_USER: rshu
        POSTGRES_PASSWORD: password
      volumes:
        - postgres_data:/var/lib/postgresql/data
        - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      ports:
        - "5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U rshu -d rshu_schedule"]  # Добавляем имя базы
        interval: 30s
        timeout: 10s
        retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-service:
    build: ./auth-service
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://rshu:password@postgres:5432/rshu_schedule
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  parser-service:
    build: ./parser-service
    environment:
      - DATABASE_URL=postgresql://rshu:password@postgres:5432/rshu_schedule
      - REDIS_URL=redis://redis:6379
      - PARSE_INTERVAL_MINUTES=1 
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  telegram-service:
    build: ./telegram-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://rshu:password@postgres:5432/rshu_schedule
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  notification-service:
    build: ./notification-service
    environment:
      - DATABASE_URL=postgresql://rshu:password@postgres:5432/rshu_schedule
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data: